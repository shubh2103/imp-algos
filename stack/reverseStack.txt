void insertAtBottom(stack<int>&st, int element)
{
    if (st.empty())
    {
        st.push(element);
        return;
    }
    int top_element = st.top();
    st.pop();
    insertAtBottom(st, element);

    st.push(top_element);
}
void reverse(stack<int>&st)
{
    if (st.empty()) return;
    int top_element = st.top();
    st.pop();
    reverse(st);
    insertAtBottom(st, top_element);
}
void display(stack<int>st)
{
    while (!st.empty()) {
        cout << st.top() << endl;
        st.pop();
    }
    cout << "----------" << endl;
}
void best()
{
    stack<int>st;
    st.push(1);
    st.push(2);
    st.push(3);
    st.push(4);
    display(st);
    reverse(st);
    display(st);
}
